<#
.SYNOPSIS
17.6.1 (L1) Ensure 'Audit Detailed File Share' is set to include 'Failure'

.DESCRIPTION
This subcategory allows you to audit attempts to access files and folders on a shared folder.

.EXAMPLE
Test-ObjectAccessAuditDetailedFileShare

Number     Name                                                                        Source                    Pass  
------     ----                                                                        ------                    ----  
17.6.1     (L1) Ensure 'Audit Detailed File Share' is set to include 'Failure'         Group Policy Settings     True  

.NOTES
General notes
#>
function Test-ObjectAccessAuditDetailedFileShare {
    [CmdletBinding()]
    param (
        # Get the product type (1, 2 or 3)
        [Parameter()][ValidateSet(1,2,3)][int]$ProductType = (Get-ProductType),
        [Parameter()][xml]$gpresult = (Get-GPResult)
    )

    begin {
        $Return = @()
        $EntryName = "Audit Detailed File Share"
        $RecommendationNumber = '17.6.1'
        $ProfileApplicability = @("Level 1 - Domain Controller","Level 1 - Member Server")
        $RecommendationName = "(L1) Ensure 'Audit Detailed File Share' is set to include 'Failure'"
        $Source = 'Group Policy Settings'

        # Get the current value of the setting
        $Entry = Get-GPOEntry -EntryName $EntryName -Name "SubcategoryName" -GPResult $GPResult
    }

    process {
        $Setting = [int]$Entry.SettingValue
        if (($Setting -eq 2) -or ($Setting -eq 3)) {
            $Pass = $true
        } else {
            $Pass = $false
        }
    }

    end {
        $Properties = [PSCustomObject]@{
            'Number' = $RecommendationNumber
            'ProfileApplicability' = $ProfileApplicability
            'Name'= $RecommendationName
            'Source' = $Source
            'Pass'= $Pass
            'Setting' = $Setting
            'Entry' = $Entry
        }
        $Properties.PSTypeNames.Add('psCISBenchmark')
        $Return += $Properties

        Return $Return
    }
}

<#
.SYNOPSIS
17.6.2 (L1) Ensure 'Audit File Share' is set to 'Success and Failure'

.DESCRIPTION
This policy setting allows you to audit attempts to access a shared folder.

.EXAMPLE
Test-ObjectAccessAuditFileShare

Number     Name                                                                        Source                    Pass  
------     ----                                                                        ------                    ----  
17.6.2     (L1) Ensure 'Audit File Share' is set to 'Success and Failure'              Group Policy Settings     True  

.NOTES
General notes
#>
function Test-ObjectAccessAuditFileShare {
    [CmdletBinding()]
    param (
        # Get the product type (1, 2 or 3)
        [Parameter()][ValidateSet(1,2,3)][int]$ProductType = (Get-ProductType),
        [Parameter()][xml]$gpresult = (Get-GPResult)
    )

    begin {
        $Return = @()
        $EntryName = "Audit File Share"
        $RecommendationNumber = '17.6.2'
        $ProfileApplicability = @("Level 1 - Domain Controller","Level 1 - Member Server")
        $RecommendationName = "(L1) Ensure 'Audit File Share' is set to 'Success and Failure'"
        $Source = 'Group Policy Settings'

        # Get the current value of the setting
        $Entry = Get-GPOEntry -EntryName $EntryName -Name "SubcategoryName" -GPResult $GPResult
    }

    process {
        $Setting = [int]$Entry.SettingValue
        if ($Setting -eq 3) {
            $Pass = $true
        } else {
            $Pass = $false
        }
    }

    end {
        $Properties = [PSCustomObject]@{
            'Number' = $RecommendationNumber
            'ProfileApplicability' = $ProfileApplicability
            'Name'= $RecommendationName
            'Source' = $Source
            'Pass'= $Pass
            'Setting' = $Setting
            'Entry' = $Entry
        }
        $Properties.PSTypeNames.Add('psCISBenchmark')
        $Return += $Properties

        Return $Return
    }
}

<#
.SYNOPSIS
17.6.3 (L1) Ensure 'Audit Other Object Access Events' is set to 'Success and Failure'

.DESCRIPTION
This policy setting allows you to audit events generated by the management of task scheduler jobs or COM+ objects.

.EXAMPLE
Test-ObjectAccessAuditOtherObjectAccessEvents

Number     Name                                                                        Source                    Pass  
------     ----                                                                        ------                    ----  
17.6.3     (L1) Ensure 'Audit Other Object Access Events' is set to 'Success and Fa... Group Policy Settings     True  

.NOTES
General notes
#>
function Test-ObjectAccessAuditOtherObjectAccessEvents {
    [CmdletBinding()]
    param (
        # Get the product type (1, 2 or 3)
        [Parameter()][ValidateSet(1,2,3)][int]$ProductType = (Get-ProductType),
        [Parameter()][xml]$gpresult = (Get-GPResult)
    )

    begin {
        $Return = @()
        $EntryName = "Audit Other Object Access Events"
        $RecommendationNumber = '17.6.3'
        $ProfileApplicability = @("Level 1 - Domain Controller","Level 1 - Member Server")
        $RecommendationName = "(L1) Ensure 'Audit Other Object Access Events' is set to 'Success and Failure'"
        $Source = 'Group Policy Settings'

        # Get the current value of the setting
        $Entry = Get-GPOEntry -EntryName $EntryName -Name "SubcategoryName" -GPResult $GPResult
    }

    process {
        $Setting = [int]$Entry.SettingValue
        if ($Setting -eq 3) {
            $Pass = $true
        } else {
            $Pass = $false
        }
    }

    end {
        $Properties = [PSCustomObject]@{
            'Number' = $RecommendationNumber
            'ProfileApplicability' = $ProfileApplicability
            'Name'= $RecommendationName
            'Source' = $Source
            'Pass'= $Pass
            'Setting' = $Setting
            'Entry' = $Entry
        }
        $Properties.PSTypeNames.Add('psCISBenchmark')
        $Return += $Properties

        Return $Return
    }
}

<#
.SYNOPSIS
17.6.4 (L1) Ensure 'Audit Removable Storage' is set to 'Success and Failure'

.DESCRIPTION
This policy setting allows you to audit user attempts to access file system objects on a removable storage device.

.EXAMPLE
Test-ObjectAccessAuditRemovableStorage

Number     Name                                                                        Source                    Pass  
------     ----                                                                        ------                    ----  
17.6.4     (L1) Ensure 'Audit Removable Storage' is set to 'Success and Failure'       Group Policy Settings     True  

.NOTES
General notes
#>
function Test-ObjectAccessAuditRemovableStorage {
    [CmdletBinding()]
    param (
        # Get the product type (1, 2 or 3)
        [Parameter()][ValidateSet(1,2,3)][int]$ProductType = (Get-ProductType),
        [Parameter()][xml]$gpresult = (Get-GPResult)
    )

    begin {
        $Return = @()
        $EntryName = "Audit Removable Storage"
        $RecommendationNumber = '17.6.4'
        $ProfileApplicability = @("Level 1 - Domain Controller","Level 1 - Member Server")
        $RecommendationName = "(L1) Ensure 'Audit Removable Storage' is set to 'Success and Failure'"
        $Source = 'Group Policy Settings'

        # Get the current value of the setting
        $Entry = Get-GPOEntry -EntryName $EntryName -Name "SubcategoryName" -GPResult $GPResult
    }

    process {
        $Setting = [int]$Entry.SettingValue
        if ($Setting -eq 3) {
            $Pass = $true
        } else {
            $Pass = $false
        }
    }

    end {
        $Properties = [PSCustomObject]@{
            'Number' = $RecommendationNumber
            'ProfileApplicability' = $ProfileApplicability
            'Name'= $RecommendationName
            'Source' = $Source
            'Pass'= $Pass
            'Setting' = $Setting
            'Entry' = $Entry
        }
        $Properties.PSTypeNames.Add('psCISBenchmark')
        $Return += $Properties

        Return $Return
    }
}
